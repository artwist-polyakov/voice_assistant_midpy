version: '3'

services:

  alice:
    container_name: alice
    build: ./alice
    ports:
      - "5555:5555"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs:rw
    restart: on-failure

  nlp-api:
    container_name: nlp-api
    build: ./nlp_api
    ports:
      - "5556:5556"
    expose:
      - "5556"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs:rw
    restart: on-failure

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "80"
      - "443"
    volumes:
      - ./nginx/data:/var/www/static:rw
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./.certs:/etc/ssl:ro
      - ./nginx/passwords/passwords:/etc/nginx/passwords:ro

  etl-elasticsearch:
    container_name: etl-elasticsearch
    build: ./etl_elasticsearch
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch
      - redis
    restart: on-failure

  postgres:
    container_name: postgres
    image: postgres:${POSTGRES_VERSION}
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/:ro
    ports:
      - "5432:5432"
    expose:
      - "5432"

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:${STACK_VERSION}
    restart: on-failure
    env_file:
      - .env
    ports:
      - "9200:9200" # удалить после тестирования
    expose:
      - "9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - ./redis/redis.conf:/redis.conf:rw
    command: [ "redis-server", "/redis.conf" ]
    restart: on-failure

  logstash:
      container_name: logstash
      image: logstash:${STACK_VERSION}
      env_file:
        - .env
      environment:
        LS_JAVA_OPTS: "-Xmx512m -Xms512m"
      ports:
        - ${LOGSTASH_PORTS1}
        - ${LOGSTASH_PORTS2}
        - ${LOGSTASH_PORTS3}
      volumes:
        - ./configs/logstash/config.yml:/usr/share/logstash/config/logstash.yml:ro
        - ./configs/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
        - ./configs/logstash/pipelines:/usr/share/logstash/config/pipelines:ro
      depends_on:
        - elasticsearch

  kibana:
    container_name: kibana
    image: kibana:${STACK_VERSION}
    env_file:
      - .env
    ports:
      - ${KIBANA_PORTS}
    volumes:
      - ./configs/kibana/config.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch

  filebeat:
    container_name: filebeat
    image: elastic/filebeat:${STACK_VERSION}
    command: filebeat -e -strict.perms=false
    platform: linux/amd64
    volumes:
      - ./configs/filebeat/config.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/logs:ro
    env_file:
      - .env
    depends_on:
      - elasticsearch

volumes:
    static_volume:
    media_volume:
    admin_static:
    admin_volume:
    redis_data:
    logs:
